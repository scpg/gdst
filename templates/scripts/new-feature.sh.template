#!/bin/bash

# Enhanced Feature Branch Creation Script
# Creates properly named branches following naming conventions

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Get the directory where this script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Source branch validation script if available
if [[ -f "$SCRIPT_DIR/validate-branch-name.sh" ]]; then
    source "$SCRIPT_DIR/validate-branch-name.sh"
fi

# Branch categories
CATEGORIES=(
    "feature:New features or enhancements"
    "bugfix:Bug fixes"
    "hotfix:Critical production fixes"
    "test:Experimental features or testing"
    "chore:Maintenance tasks, refactoring"
    "docs:Documentation updates"
)

# Function to show usage
show_usage() {
    echo -e "${BLUE}Enhanced Feature Branch Creation${NC}"
    echo ""
    echo "Usage:"
    echo "  ./scripts/new-feature.sh <category> <description> [issue-number]"
    echo "  ./scripts/new-feature.sh --interactive"
    echo "  ./scripts/new-feature.sh --help"
    echo ""
    echo "Examples:"
    echo "  ./scripts/new-feature.sh feature user-authentication"
    echo "  ./scripts/new-feature.sh bugfix login-error-fix 123"
    echo "  ./scripts/new-feature.sh hotfix security-patch"
    echo ""
    echo -e "${YELLOW}Available Categories:${NC}"
    for category in "${CATEGORIES[@]}"; do
        IFS=':' read -r name desc <<< "$category"
        printf "  %-10s - %s\n" "$name" "$desc"
    done
}

# Function for interactive mode
interactive_mode() {
    echo -e "${BLUE}=== Interactive Branch Creation ===${NC}"
    echo ""
    
    # Select category
    echo -e "${YELLOW}Select branch category:${NC}"
    select category_option in "${CATEGORIES[@]}" "Cancel"; do
        case $category_option in
            "Cancel")
                echo "Operation cancelled."
                exit 0
                ;;
            *":"*)
                CATEGORY="${category_option%%:*}"
                break
                ;;
            *)
                echo "Invalid selection. Please try again."
                ;;
        esac
    done
    
    # Get description
    echo ""
    read -p "Enter branch description (kebab-case, e.g., user-authentication): " DESCRIPTION
    
    # Validate description
    if [[ -z "$DESCRIPTION" ]]; then
        echo -e "${RED}Error: Description cannot be empty${NC}"
        exit 1
    fi
    
    # Get optional issue number
    echo ""
    read -p "Enter issue number (optional, press Enter to skip): " ISSUE_NUMBER
    
    # Construct branch name
    if [[ -n "$ISSUE_NUMBER" ]]; then
        BRANCH_NAME="$CATEGORY/$ISSUE_NUMBER-$DESCRIPTION"
    else
        BRANCH_NAME="$CATEGORY/$DESCRIPTION"
    fi
    
    create_branch "$BRANCH_NAME"
}

# Function to create and switch to branch
create_branch() {
    local branch_name="$1"
    
    # Validate branch name if validation function is available
    if declare -f validate_branch_name > /dev/null; then
        if ! validate_branch_name "$branch_name"; then
            echo -e "${RED}Branch name validation failed. Please use a valid name.${NC}"
            exit 1
        fi
    fi
    
    echo ""
    echo -e "${BLUE}Creating branch: $branch_name${NC}"
    
    # Ensure we're on dev/main and it's up to date
    echo -e "${YELLOW}Switching to dev/main and pulling latest changes...${NC}"
    if ! git checkout dev/main; then
        echo -e "${RED}Error: Could not switch to dev/main branch${NC}"
        exit 1
    fi
    
    if ! git pull origin dev/main; then
        echo -e "${YELLOW}Warning: Could not pull latest changes from origin${NC}"
    fi
    
    # Create and switch to new branch
    if git checkout -b "$branch_name"; then
        echo -e "${GREEN}âœ… Created and switched to branch: $branch_name${NC}"
        echo ""
        echo -e "${YELLOW}Next steps:${NC}"
        echo "1. Make your changes"
        echo "2. Commit your work: git add . && git commit -m 'Your commit message'"
        echo "3. Push your branch: git push -u origin $branch_name"
        echo "4. Create a pull request on GitHub"
    else
        echo -e "${RED}Error: Could not create branch $branch_name${NC}"
        exit 1
    fi
}

# Main execution
case "${1:-}" in
    "--help"|"-h")
        show_usage
        exit 0
        ;;
    "--interactive"|"-i"|"")
        interactive_mode
        ;;
    *)
        if [[ $# -lt 2 ]]; then
            echo -e "${RED}Error: Missing required arguments${NC}"
            echo ""
            show_usage
            exit 1
        fi
        
        CATEGORY="$1"
        DESCRIPTION="$2"
        ISSUE_NUMBER="${3:-}"
        
        # Validate category
        valid_category=false
        for category in "${CATEGORIES[@]}"; do
            if [[ "$CATEGORY" == "${category%%:*}" ]]; then
                valid_category=true
                break
            fi
        done
        
        if [[ "$valid_category" == false ]]; then
            echo -e "${RED}Error: Invalid category '$CATEGORY'${NC}"
            echo ""
            show_usage
            exit 1
        fi
        
        # Construct branch name
        if [[ -n "$ISSUE_NUMBER" ]]; then
            BRANCH_NAME="$CATEGORY/$ISSUE_NUMBER-$DESCRIPTION"
        else
            BRANCH_NAME="$CATEGORY/$DESCRIPTION"
        fi
        
        create_branch "$BRANCH_NAME"
        ;;
esac
