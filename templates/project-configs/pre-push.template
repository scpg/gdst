#!/bin/bash

# Pre-push Git hook to validate branch names
# This hook validates branch names before they are pushed to the remote repository

# Get the directory where this script is located
HOOK_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
REPO_ROOT="$(git rev-parse --show-toplevel)"

# Try to find the validation script in common locations
VALIDATION_SCRIPT=""
if [[ -f "$REPO_ROOT/scripts/validate-branch-name.sh" ]]; then
    VALIDATION_SCRIPT="$REPO_ROOT/scripts/validate-branch-name.sh"
elif [[ -f "$REPO_ROOT/.git/hooks/validate-branch-name.sh" ]]; then
    VALIDATION_SCRIPT="$REPO_ROOT/.git/hooks/validate-branch-name.sh"
fi

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Read from stdin to get the list of refs being pushed
while IFS=' ' read -r local_ref local_sha remote_ref remote_sha; do
    # Skip if deleting a branch
    if [[ "$local_sha" == "0000000000000000000000000000000000000000" ]]; then
        continue
    fi
    
    # Extract branch name from the ref
    if [[ "$remote_ref" =~ refs/heads/(.*) ]]; then
        branch_name="${BASH_REMATCH[1]}"
        
        echo -e "${YELLOW}Validating branch name: $branch_name${NC}"
        
        # Use validation script if available, otherwise basic validation
        if [[ -n "$VALIDATION_SCRIPT" && -f "$VALIDATION_SCRIPT" ]]; then
            if ! bash "$VALIDATION_SCRIPT" "$branch_name"; then
                echo -e "${RED}❌ Push rejected: Invalid branch name '$branch_name'${NC}"
                echo -e "${YELLOW}Run 'scripts/validate-branch-name.sh --help' for naming guidelines${NC}"
                exit 1
            fi
        else
            # Basic validation if validation script is not available
            if [[ ! "$branch_name" =~ ^(main|master|dev/main|qa/staging|feature/|bugfix/|hotfix/|test/|chore/|docs/|dev/|qa/|release/) ]]; then
                echo -e "${RED}❌ Push rejected: Invalid branch name '$branch_name'${NC}"
                echo -e "${YELLOW}Branch names should start with: feature/, bugfix/, hotfix/, test/, chore/, docs/, dev/, qa/, or release/${NC}"
                echo -e "${YELLOW}Or be one of the protected branches: main, master, dev/main, qa/staging${NC}"
                exit 1
            fi
        fi
        
        echo -e "${GREEN}✅ Branch name validation passed${NC}"
    fi
done

exit 0
